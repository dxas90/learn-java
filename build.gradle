plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.learn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'
targetCompatibility = '21'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

	// Development tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'

	// Annotation processing
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}

jar {
	enabled = false
	archiveClassifier = ''
}

bootJar {
	enabled = true
	archiveClassifier = ''
	layered {
		enabled = true
	}
}

// Quality gates
sonarqube {
	properties {
		property "sonar.projectKey", "learn-java"
		property "sonar.projectName", "Learn Java Spring Boot"
	}
}

name: Kubernetes Deployment

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy-to-kind:
    name: Deploy to KinD (Testing)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create KinD cluster
        uses: helm/kind-action@v1
        with:
          version: v0.20.0
          kubectl_version: v1.28.0
          config: .gitlab/kind-config.yaml

      - name: Load Docker image to KinD
        run: |
          IMAGE_TAG=main
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}
          kind load docker-image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}

      - name: Deploy to KinD
        run: |
          # Update deployment with correct image
          sed -i "s|IMAGE_PLACEHOLDER|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main|g" k8s/deployment.yaml

          echo "Waiting for nodes to be ready..."
          kubectl wait --for=condition=Ready nodes --all --timeout=5m

          echo "Deploying application..."
          kubectl apply -f k8s/deployment.yaml

          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=Ready pods --all --timeout=5m

          echo "Deployment status:"
          kubectl get pods
          kubectl get services

      - name: Run smoke tests
        run: |
          # Wait for service to be available
          kubectl port-forward service/learn-service 8080:80 &
          sleep 10

          # Basic health check
          curl -f http://localhost:8080/actuator/health || exit 1
          curl -f http://localhost:8080/api/v1/ping || exit 1

          echo "âœ… Smoke tests passed"

  deploy-to-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: deploy-to-kind
    if: github.ref == 'refs/heads/main'
    environment: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy with Helm
        run: |
          echo "ðŸš€ Would deploy to staging environment here"
          echo "Using Helm chart from charts/learn-java/"
          # helm upgrade --install learn-java ./charts/learn-java \
          #   --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
          #   --set image.tag=main \
          #   --namespace learn-java-staging \
          #   --create-namespace
